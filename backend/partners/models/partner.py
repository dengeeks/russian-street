from django.core.validators import FileExtensionValidator
from django.db import models

from common.models import UUIDMixin, DateTimeMixin
from common.utils import setup_image_path


class PartnerType(DateTimeMixin):
    """
    –ú–æ–¥–µ–ª—å, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∞—è –¢–∏–ø –ø–∞—Ä—Ç–Ω–µ—Ä–∞.

    –ê—Ç—Ä–∏–±—É—Ç—ã:
        name (CharField): –¢–∏–ø –ø–∞—Ä—Ç–Ω—ë—Ä–∞.

    –ú–µ—Ç–∞:
        verbose_name (str): –ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ –≤ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–º —á–∏—Å–ª–µ.
        verbose_name_plural (str): –ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ –≤–æ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–º —á–∏—Å–ª–µ.

    –ú–µ—Ç–æ–¥—ã:
        __str__(): –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ç–∏–ø –ø–∞—Ä—Ç–Ω—ë—Ä–∞.
    """
    name = models.CharField(
        verbose_name = '–¢–∏–ø –ø–∞—Ä—Ç–Ω–µ—Ä–∞',
        max_length = 125
    )

    def __str__(self):
        return self.name

    class Meta:
        verbose_name = '—Ç–∏–ø –ø–∞—Ä—Ç–Ω–µ—Ä–∞'
        verbose_name_plural = '—Ç–∏–ø –ø–∞—Ä—Ç–Ω–µ—Ä–∞'


class Partner(UUIDMixin, DateTimeMixin):
    """
    –ú–æ–¥–µ–ª—å, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∞—è –ø–∞—Ä—Ç—ë—Ä–∞.

    –ê—Ç—Ä–∏–±—É—Ç—ã:
        name (CharField): –ù–∞–∑–≤–∞–Ω–∏–µ –ø–∞—Ä—Ç–Ω—ë—Ä–∞.
        image (ImageField): –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–∞—Ä—Ç–Ω—ë—Ä–∞.
        description (TextField): –û–ø–∏—Å–∞–Ω–∏–µ –ø–∞—Ä—Ç—ë—Ä–∞.
        type (ForeignKey): –¢–∏–ø –ø–∞—Ä—Ç–Ω—ë—Ä–∞.
        url (URLField): –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–∞—Ä—Ç–Ω–µ—Ä–∞.

    –ú–µ—Ç–∞:
        verbose_name (str): –ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ –≤ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–º —á–∏—Å–ª–µ.
        verbose_name_plural (str): –ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ –≤–æ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–º —á–∏—Å–ª–µ.

    –ú–µ—Ç–æ–¥—ã:
        __str__(): –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø–∞—Ä—Ç–Ω—ë—Ä–∞.
    """

    name = models.CharField(
        '–ù–∞–∑–≤–∞–Ω–∏–µ –ø–∞—Ä—Ç–Ω—ë—Ä–∞',
        max_length = 150,
        unique = True,
    )
    image = models.ImageField(
        upload_to = setup_image_path,
        verbose_name = '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
        max_length = 1000,
        help_text = '–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
        validators = [
            FileExtensionValidator(
                allowed_extensions = ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'webp', 'svg']
            )
        ]
    )
    description = models.TextField(
        verbose_name = '–û–ø–∏—Å–∞–Ω–∏–µ –ø–∞—Ä—Ç—ë—Ä–∞'
    )
    type = models.ForeignKey(
        to = PartnerType,
        verbose_name = '–¢–∏–ø –ø–∞—Ä—Ç–Ω–µ—Ä–∞',
        on_delete = models.RESTRICT,
        related_name = 'partners'
    )
    url = models.URLField(
        verbose_name = '–°—Å—ã–ª–∫–∞ –Ω–∞ –ø–∞—Ä—Ç–Ω–µ—Ä–∞',
        max_length = 1000,
        blank = True,
        null = True
    )

    class Meta:
        verbose_name = '–ø–∞—Ä—Ç–Ω—ë—Ä'
        verbose_name_plural = '–ø–∞—Ä—Ç–Ω—ë—Ä—ã'

    def __str__(self):
        return self.name

    def save(self, *args, **kwargs):
        print(f"üîÑ Partner.save() –≤—ã–∑–≤–∞–Ω –¥–ª—è ID={self.id}")  # Debug
        super().save(*args, **kwargs)