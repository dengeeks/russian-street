version: '3.8'

services:

  db:
    container_name: db
    image: postgres
    restart: always
    env_file:
      - ./backend/.env
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data/

  backend:
    build:
      context: ./backend
    env_file:
      - ./backend/.env
    container_name: backend
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    ports:
      - '8000:8000'
    restart: always
    depends_on:
      - db
      - redis
    volumes:
      - static:/app/back_static/
      - media:/app/back_media/

  nextjs:
    build:
      context: ./new-frontend/
    container_name: nextjs
    ports:
      - 3000:3000

  celery:
    build:
      context: ./backend
    env_file:
      - ./backend/.env
    command: celery -A config worker --loglevel=info
    depends_on:
      - backend
      - redis

  redis:
    image: redis:latest
    env_file:
      - ./backend/.env
    ports:
      - "6379:6379"
    command: redis-server --requirepass redis_password

  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    restart: always
    volumes:
      - static:/app/back_static/
      - media:/app/back_media/
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt:/etc/letsencrypt
    depends_on:
      - backend
      - nextjs


volumes:
  static:
  media:
  db_data:
