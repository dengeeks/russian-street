version: '3.8'

services:

  db:
    container_name: db
    image: postgres
    restart: always
    env_file:
      - ./backend/.env
    ports:
      - "5433:5432"
    volumes:
      - db_data:/var/lib/postgresql/data/
    networks:
      - street_network

  backend-street:
    build:
      context: ./backend
    env_file:
      - ./backend/.env
    container_name: backend-street
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8001
    ports:
      - '8001:8001'
    restart: always
    depends_on:
      - db
      - redis
    volumes:
      - static:/app/back_static1/
      - media:/app/back_media1/
    networks:
      - street_network

  nextjs:
    build:
      context: ./new-frontend/
    container_name: nextjs
    ports:
      - 3000:3000
    networks:
      - street_network

  celery:
    build:
      context: ./backend
    env_file:
      - ./backend/.env
    command: celery -A config worker --loglevel=info
    depends_on:
      - backend-street
      - redis
    networks:
      - street_network

  redis:
    image: redis:latest
    env_file:
      - ./backend/.env
    ports:
      - "6380:6379"
    command: redis-server --requirepass redis_password
    networks:
      - street_network


volumes:
  static:
  media:
  db_data:

networks:
  street_network:
    external: true
